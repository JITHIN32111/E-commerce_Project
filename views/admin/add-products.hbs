<head>

  <meta charset="utf-8" />
  <meta content="width=device-width, initial-scale=1.0" name="viewport" />

  <title>Dashboard - NiceAdmin Bootstrap Template</title>
  <meta content="" name="description" />
  <meta content="" name="keywords" />

  <!-- Favicons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
  <link href="/adminassets/img/favicon.png" rel="icon" />
  <link href="/adminassets/img/apple-touch-icon.png" rel="apple-touch-icon" />

  <!-- Google Fonts -->
  <link href="https://fonts.gstatic.com" rel="preconnect" />
  <link
    href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
    rel="stylesheet" />

  <!-- Vendor CSS Files -->
  <link href="/adminassets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
  <link href="/adminassets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet" />
  <link href="/adminassets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet" />
  <link href="/adminassets/vendor/quill/quill.snow.css" rel="stylesheet" />
  <link href="/adminassets/vendor/quill/quill.bubble.css" rel="stylesheet" />
  <link href="/adminassets/vendor/remixicon/remixicon.css" rel="stylesheet" />
  <link href="/adminassets/vendor/simple-datatables/style.css" rel="stylesheet" />

  <!-- Template Main CSS File -->
  <link href="/adminassets/css/style.css" rel="stylesheet" />
</head>

<main class="main" id="main">

  <body style=" background-image: linear-gradient(to right, rgb(0,0,0), rgb(0 0 0));">
    <section>
      <div class="container mt-4">
        <div class="row">
          <div class="col-md-6">
            <h2 class="text-center font-weight-boldt text-light">Add products</h2>
            <div class="container">
            </div>

            <form action="/admin/add-product" class="text-light" enctype="multipart/form-data" method="post">
          {{!-- <form  class="text-light" enctype="multipart/form-data" id="product-form"> --}}

              <label for="">Name</label>
              <input type="text" required name="name" class="form-control" />

              {{! <label for="">category</label>
              <input type="text" name="category" class="form-control"> }}

              <label for="cars">category:</label>

              <select class="form-select" aria-label="Default select example" name="category">
                <option value=""></option>
                {{#each category}}
                <option value="{{this.name}}">{{this.name}}</option>
                {{/each}}
              </select>

              <label for="">discription</label>
              <input type="text" name="discription" class="form-control" />

              <label for="">price</label>
              <input type="text" name="price" class="form-control" />

              <label for="">Stock</label>
              <input type="text" name="stock" class="form-control" />
<label for="">Product Size</label>
{{!-- <br>
<select name="size[]" id="ingredients" multiple="multiple">
    <option >7</option>
    <option >8</option>
    <option>9</option>
   
</select> --}}

         
              <label for="">image</label>
              <div class="col-sm-10 mb-4" style="display: none;" id="showImg">
                <img src="" style="height: auto; width:100px;" id="imgId">
                <img src="" style="height: auto; width:100px;" id="imgId2">
                <img src="" style="height: auto; width:100px;" id="imgId3">
                <img src="" style="height: auto; width:100px;" id="imgId4">


              </div>

              <input type="file" name="image" class="form-control" id="formFile"
                accept="image/gif, image/jpeg, image/png" data-bs-toggle="modal" data-bs-target="#exampleModal"
                onchange="displayImg(event)" multiple />

              <button type="submit" class="btn btn-success mt-4">submit</button>
            </form>
          </div>
        </div>
      </div>
      <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
              <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <div class="form-group row" id="test">
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Save changes</button>
            </div>
          </div>
        </div>
      </div>


    </section>

    <script>
      const input = document.getElementById('formFile')
      const test = document.getElementById('test')
      input.addEventListener('change', () => {

        // Getting image file object from the input variable
        const img_data = []
        // const imagebox = []
        // const crop_btn = []
        // const confirm_btn = []

        const url = []
        const length = input.files.length

        for (i = 0; i < length; i++) {

          test.innerHTML += `<div class="col-4"><div id="image-box${i}" class="image-container" style="height: 350px; width: 350px;"> </div>
    <button class="btn btn-outline-info" id="crop-btn${i}" style="width: 100%; margin-top: 10px; display: block;" type="button">Crop</button> </div>`
        }
        for (i = 0; i < length; i++) {
          img_data[i] = input.files[i]
        }

        img_data.forEach((image_data, i) => {
          url[i] = URL.createObjectURL(image_data)
        })
        // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
        // The new object URL represents the specified File object or Blob object.
        url.forEach((url, i) => {
          document.getElementById('image-box' + i).innerHTML = `<img src="${url}" id="image${i}" style="width:100%;">`
        })

        // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
        // Storing that cropping view image in a variable

        // Displaying the image box
        //for(i=0;i<length;i++){
        //      document.getElementById('image-box'+i).style.display= 'block'
        //       document.getElementById('crop-btn'+i).style.display= 'block'
        //  }

        for (i = 0; i < length; i++) {
          cropper(img_data[i], document.getElementById('image' + i), i, document.getElementById('crop-btn' + i), document.getElementById('image-box' + i))
        }

        // Creating a croper object with the cropping view image
        // The new Cropper() method will do all the magic and diplay the cropping view and adding cropping functionality on the website
        // For more settings, check out their official documentation at https://github.com/fengyuanchen/cropperjs
        let container = new DataTransfer();
        let fileInputElement = document.getElementById('formFile');
        function cropper(img_data, image, index, crop_btn, imagebox) {
          const cropper = new Cropper(image, {
            autoCropArea: 1,
            viewMode: 1,
            scalable: false,
            zoomable: false,
            movable: false,
            minCropBoxWidth: 50,
            minCropBoxHeight: 50,
          })
          // When crop button is clicked this event will get triggered
          crop_btn.addEventListener('click', () => {

            // This method coverts the selected cropped image on the cropper canvas into a blob object
            cropper.getCroppedCanvas().toBlob((blob) => {
              // Gets the original image data
              // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
              let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
              // Create a new container
              // Add the cropped image file to the container
              container.items.add(file);
              fileInputElement.files = container.files
              // Replace the original image file with the new cropped image file
              // Hide the cropper box
              imagebox.style.display = 'none'
              // Hide the crop button
              crop_btn.style.display = 'none'
            });
          });
        }
      });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>

    <script src="/adminassets/vendor/apexcharts/apexcharts.min.js"></script>
    <script src="/adminassets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/adminassets/vendor/chart.js/chart.min.js"></script>
    <script src="/adminassets/vendor/echarts/echarts.min.js"></script>
    <script src="/adminassets/vendor/quill/quill.min.js"></script>
    <script src="/adminassets/vendor/simple-datatables/simple-datatables.js"></script>
    <script src="/adminassets/vendor/tinymce/tinymce.min.js"></script>
    <script src="/adminassets/vendor/php-email-form/validate.js"></script>

    <!-- Template Main JS File -->
    <script src="/adminassets/js/main.js"></script>

  </body>

</main>

{{!--
<script>

  $.ajax({
    url: '/admin/add-product',
    method: 'post',
    success: (response) => {
      if (response == "success") {
        alert("}}}}")
        location.reload()
      }

    }
  })



</script> --}}

<script>
  function displayImg(event) {
    document.getElementById('showImg').style.display = 'block';
    document.getElementById('imgId').src = URL.createObjectURL(event.target.files[0])
    document.getElementById('imgId2').src = URL.createObjectURL(event.target.files[1])
    document.getElementById('imgId3').src = URL.createObjectURL(event.target.files[2])
    document.getElementById('imgId4').src = URL.createObjectURL(event.target.files[3])


  }





</script>

    {{!-- $("#product-form").submit((e) => {
       e.preventDefault()
        console.log("Helooo")
        
       
        $.ajax({
              url: '/admin/add-product',
              data:  $('#product-form').serialize(),
              type: 'post',
         success: (response) => {
          alert("_______")
          location.reload()
         }

        })
    }) --}}

  

